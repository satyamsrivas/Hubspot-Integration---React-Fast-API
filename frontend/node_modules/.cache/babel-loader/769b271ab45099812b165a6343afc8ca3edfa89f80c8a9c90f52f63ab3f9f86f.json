{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shreyansh\\\\Downloads\\\\integrations_technical_assessment\\\\frontend\\\\src\\\\integrations\\\\hubspot.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HubspotIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/authorize`, formData);\n      console.log(\"this is the response\", response);\n      console.log(\"this is the response data\", response.data);\n      const authURL = response === null || response === void 0 ? void 0 : response.data;\n      console.log(\"this is auth url\", authURL);\n      const newWindow = window.open(authURL, 'Hubspot Authorization', 'width=600, height=600');\n      const pollTimer = window.setInterval(() => {\n        if ((newWindow === null || newWindow === void 0 ? void 0 : newWindow.closed) !== false) {\n          window.clearInterval(pollTimer);\n          handleWindowClosed();\n        }\n      }, 200);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setIsConnected(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail);\n    }\n  };\n  const handleWindowClosed = async () => {\n    try {\n      console.log(\"we are in the window close method\");\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/credentials`, formData);\n      console.log(\"\");\n      const credentials = response.data;\n      if (credentials) {\n        setIsConnected(false);\n        setIsConnecting(true);\n        setIntegrationParams(prev => ({\n          ...prev,\n          credentials: credentials,\n          type: 'Hubspot'\n        }));\n      }\n      setIsConnecting(false);\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.detail);\n    }\n  };\n  useEffect(() => {\n    setIsConnected(integrationParams !== null && integrationParams !== void 0 && integrationParams.credentials ? true : false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [\"Parameters\", /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: isConnected ? () => {} : handleConnectClick,\n          color: isConnected ? 'success' : 'primary',\n          disabled: isConnecting,\n          style: {\n            pointerEvents: isConnected ? 'none' : 'auto',\n            cursor: isConnected ? 'default' : 'pointer',\n            opacity: isConnected ? 1 : undefined\n          },\n          children: isConnected ? 'Hubspot Connected' : isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 73\n          }, this) : 'connect to hubspot'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(HubspotIntegration, \"PowvrRWX+yAaK3MMbh5l/3WOCRQ=\");\n_c = HubspotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubspotIntegration\");","map":{"version":3,"names":["useState","useEffect","Box","Button","CircularProgress","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","HubspotIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","handleConnectClick","formData","FormData","append","response","post","console","log","data","authURL","newWindow","window","open","pollTimer","setInterval","closed","clearInterval","handleWindowClosed","e","_e$response","_e$response$data","alert","detail","credentials","prev","type","_e$response2","_e$response2$data","children","sx","mt","display","variant","onClick","color","disabled","style","pointerEvents","cursor","opacity","undefined","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shreyansh/Downloads/integrations_technical_assessment/frontend/src/integrations/hubspot.js"],"sourcesContent":["import {useState, useEffect} from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    CircularProgress\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nexport const HubspotIntegration = ({user,org,integrationParams,setIntegrationParams}) => {\r\n    const [isConnected,setIsConnected] = useState(false);\r\n    const [isConnecting,setIsConnecting] = useState(false);\r\n\r\n    const handleConnectClick = async () => {\r\n        try{\r\n            setIsConnecting(true);\r\n            const formData = new FormData();\r\n            formData.append('user_id',user);\r\n            formData.append('org_id',org);\r\n            const response = await axios.post(`http://localhost:8000/integrations/hubspot/authorize`,formData);\r\n            console.log(\"this is the response\",response)\r\n            console.log(\"this is the response data\",response.data);\r\n            const authURL = response?.data;\r\n            console.log(\"this is auth url\",authURL)\r\n\r\n            const newWindow = window.open(authURL,'Hubspot Authorization','width=600, height=600');\r\n\r\n            const pollTimer = window.setInterval(() => {\r\n                if(newWindow?.closed !== false){\r\n                    window.clearInterval(pollTimer);\r\n                    handleWindowClosed();\r\n                }\r\n            },200);\r\n\r\n        }\r\n        catch(e) {\r\n            setIsConnected(false);\r\n            alert(e?.response?.data?.detail);\r\n\r\n        }\r\n    }\r\n\r\n    const handleWindowClosed = async () => {\r\n        try{\r\n            console.log(\"we are in the window close method\")\r\n            const formData = new FormData();\r\n            formData.append('user_id',user);\r\n            formData.append('org_id',org);\r\n            const response = await axios.post(`http://localhost:8000/integrations/hubspot/credentials`,formData)\r\n            console.log(\"\")\r\n            const credentials = response.data;\r\n            if (credentials){\r\n                setIsConnected(false);\r\n                setIsConnecting(true);\r\n                setIntegrationParams(prev => ({...prev,credentials: credentials,type:'Hubspot'}))\r\n            }\r\n            setIsConnecting(false)\r\n        }\r\n        catch(e){\r\n            setIsConnecting(false);\r\n            alert(e?.response?.data?.detail)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsConnected(integrationParams?.credentials ? true:false)\r\n    },[]);\r\n\r\n\r\n    return (\r\n        <>\r\n        <Box sx={{mt: 2}}>\r\n            Parameters\r\n            <Box display='flex'>\r\n                <Button\r\n                   variant='contained'\r\n                   onClick={isConnected ? () => {} :handleConnectClick}\r\n                   color={isConnected ? 'success':'primary'}\r\n                   disabled={isConnecting}\r\n                   style={{\r\n                    pointerEvents: isConnected ? 'none' : 'auto',\r\n                    cursor: isConnected ? 'default' : 'pointer',\r\n                    opacity : isConnected ? 1 : undefined\r\n                   }}\r\n                >\r\n                    {isConnected ? 'Hubspot Connected' : isConnecting ? <CircularProgress size={20}></CircularProgress> : 'connect to hubspot'}\r\n                    \r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n        </>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}